
import tkinter as tk
from tkinter import messagebox

class TodoApp:
    def __init__(self, root):
        self.root = root
        self.root.title("To-Do List App")
        self.root.geometry("400x500")
        
        # Tasks List
        self.tasks = []

        # Create Layout
        self.create_widgets()

    def create_widgets(self):
        # Create Input Frame
        input_frame = tk.Frame(self.root, padx=5, pady=5)
        input_frame.pack(side=tk.TOP, fill=tk.BOTH)

        self.task_entry = tk.Entry(input_frame, font=("Arial", 14), width=30)
        self.task_entry.pack(side=tk.LEFT, padx=5)

        add_button = tk.Button(input_frame, text="Add Task", font=("Arial", 12), command=self.add_task)
        add_button.pack(side=tk.LEFT, padx=5)

        # Create Task List Frame
        self.task_list_frame = tk.Frame(self.root)
        self.task_list_frame.pack(side=tk.TOP, fill=tk.BOTH, expand=True)

        # Create Scrollbar
        scrollbar = tk.Scrollbar(self.task_list_frame)
        scrollbar.pack(side=tk.RIGHT, fill=tk.Y)

        # Create Task List
        self.task_listbox = tk.Listbox(self.task_list_frame, font=("Arial", 12), selectmode=tk.SINGLE, yscrollcommand=scrollbar.set)
        self.task_listbox.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)
        scrollbar.config(command=self.task_listbox.yview)

        # Create Buttons Frame
        buttons_frame = tk.Frame(self.root)
        buttons_frame.pack(side=tk.TOP, fill=tk.X)

        delete_button = tk.Button(buttons_frame, text="Delete Task", font=("Arial", 12), command=self.delete_task)
        delete_button.pack(side=tk.LEFT, padx=5, pady=10)

        clear_button = tk.Button(buttons_frame, text="Clear All", font=("Arial", 12), command=self.clear_tasks)
        clear_button.pack(side=tk.LEFT, padx=5, pady=10)

    def add_task(self):
        task = self.task_entry.get().strip()
        if task:
            self.tasks.append(task)
            self.task_listbox.insert(tk.END, task)
            self.task_entry.delete(0, tk.END)
        else:
            messagebox.showwarning("Warning", "Task cannot be empty!")

    def delete_task(self):
        try:
            index = self.task_listbox.curselection()[0]
            self.task_listbox.delete(index)
            del self.tasks[index]
        except IndexError:
            messagebox.showwarning("Warning", "Please select a task to delete!")

    def clear_tasks(self):
        self.tasks = []
        self.task_listbox.delete(0, tk.END)

if __name__ == "__main__":
    root = tk.Tk()
    app = TodoApp(root)
    root.mainloop()
